meta {
  name: Create Scan - Default Language
  type: http
  seq: 28
}

post {
  url: http://localhost:3000/scans
  body: json
  auth: bearer
}

auth:bearer {
  token: changeme
}

body:json {
  {
    "url": "https://example.com"
  }
}

tests {
  test("Should return 201 Created", function() {
    expect(res.getStatus()).to.equal(201);
  });
  
  test("Should create scan with default status", function() {
    const scan = res.getBody();
    expect(scan).to.have.property('id');
    expect(scan).to.have.property('url');
    expect(scan).to.have.property('status');
    expect(scan.status).to.equal('pending');
    expect(scan.url).to.equal('https://example.com');
  });
  
  test("Should have proper scan structure", function() {
    const scan = res.getBody();
    expect(scan).to.have.property('violations');
    expect(scan).to.have.property('totalIssueCount');
    expect(scan).to.have.property('createdAt');
    expect(scan).to.have.property('updatedAt');
    expect(scan.violations).to.be.an('array');
    expect(scan.totalIssueCount).to.equal(0);
  });
  
  test("Should have scanner type", function() {
    const scan = res.getBody();
    expect(scan).to.have.property('scannerType');
    // Should default to htmlcs if not specified
    expect(scan.scannerType).to.equal('htmlcs');
  });
  
  test("Should have language field with default value", function() {
    const scan = res.getBody();
    expect(scan).to.have.property('language');
    // Should default to 'en' if not specified
    expect(scan.language).to.equal('en');
  });
}
